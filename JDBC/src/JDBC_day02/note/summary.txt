DBUtil：
	 实现JDBC的工具类
	 定义静态方法，直接返回数据库的连接对象
	 定义静态方法，关闭所有资源
 
JDBCDemo01：
 	使用了DBUtil工具类
	 使用PrepareStatement，实现模糊查询：ps.setString(1, "%"+condition+"%");
 
JDBCDemo02：
	JDBC读取数据表users，每行数据封装到USers类的对象中。

JDBCDemo03：
	银行转账
	conn.setAutoCommit(false);//将事务的自动提交取消。
	conn.commit();//手动提交事务，可将上面的逻辑全部控制在一个事务中。
	conn.rollback();//回滚事务。

EmpManage_JDBC：
	1.bean:实体类
	2.dao:实现类(包)daoimpl，接口
	3.test:测试类	
	4.DBUtil:
		静态--连接数据库的方法
				public static Connection getConnection (){
					Connection conn = null;
					try{
						conn = Class.forName("jdbc.oracle.driver.OracleDriver");
						String url = ？
						String username = ？
						String password = ？
						conn = DriverManager.getConnection(url, username, password);
					}catch(Exception e){
						e.printStackTrace();
					}
					return conn;
				};
		静态--关闭资源的方法
				public static void close(Connection conn,Statement ps,ResultSet rs) {
					try {
						if(rs != null) {
							rs.close();
						}
						if(ps != null) {
							ps.close();
						}
						if(conn != null) {
							con.close();
						}
					}catch(SQLException e) {
						e.printStackTrace();
					}
				}

补充：
	1.sql.date转util.date可以自动转换。
	  util.date--->sql.date： java.sql.Date date = new java.sql.Date(emp.getHiredate().getTime());
	  //sql.Date的构造可以传1970的毫秒值，util.Date的getTime()可以得到1970的毫秒值。
	2.String--->util.Date
	  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	  emp.setHiredate(sdf.parse(sc.next()));//将String--->util.date,会抛出ParseException异常。

